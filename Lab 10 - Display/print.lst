


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Connor Leu and Victor Olugbusi
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000                 PRESERVE8
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   23 00000000         ; Output a 32-bit number in unsigned decimal format
   24 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   25 00000000         ; Output: none
   26 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   27 00000000         ; R0=0,    then output "0"
   28 00000000         ; R0=3,    then output "3"
   29 00000000         ; R0=89,   then output "89"
   30 00000000         ; R0=123,  then output "123"
   31 00000000         ; R0=9999, then output "9999"
   32 00000000         ; R0=4294967295, then output "4294967295"
   33 00000000         ; MUST USE LOCALS
   34 00000000         
   35 00000000        B 
                       fp      rn               r11
   36 00000000 00000000 
                       count   equ              0
   37 00000000 00000004 
                       num     equ              4
   38 00000000         
   39 00000000         LCD_OutDec
   40 00000000 E92D 4BF0       push             {r4-r9, r11, lr}
   41 00000004 B082            sub              sp, #8
   42 00000006 46EB            mov              fp, sp
   43 00000008         
   44 00000008 2800            cmp              r0, #0      ; check if we are p
                                                            rinting straight 0
   45 0000000A D02A            beq              JustZero
   46 0000000C         
   47 0000000C F8CB 0004       str              r0, [fp, #num]
   48 00000010 F04F 0400       mov              r4, #0
   49 00000014 F8CB 4000       str              r4, [fp, #count]



ARM Macro Assembler    Page 2 


   50 00000018 F04F 050A       mov              r5, #10
   51 0000001C         Loop
   52 0000001C F8DB 4004       ldr              r4, [fp, #num]
   53 00000020 2C00            cmp              r4, #0
   54 00000022 D010            beq              Next
   55 00000024 FBB4 F6F5       udiv             r6, r4, r5
   56 00000028 FB06 F705       mul              r7, r6, r5
   57 0000002C EBA4 0807       sub              r8, r4, r7  ; r8 is remainder
   58 00000030 F84D 8D04       push             {r8}
   59 00000034 F8CB 6004       str              r6, [fp, #num]
   60 00000038 F8DB 6000       ldr              r6, [fp, #count]
   61 0000003C F106 0601       add              r6, #1
   62 00000040 F8CB 6000       str              r6, [fp, #count]
   63 00000044 E7EA            B                Loop
   64 00000046         Next
   65 00000046 BC01            pop              {r0}
   66 00000048 F100 0030       add              r0, #0x30
   67 0000004C F7FF FFFE       BL               ST7735_OutChar
   68 00000050 F8DB 6000       ldr              r6, [fp, #count]
   69 00000054 3E01            subs             r6, #1
   70 00000056 F8CB 6000       str              r6, [fp, #count]
   71 0000005A D1F4            bne              Next
   72 0000005C         donedone
   73 0000005C B002            add              sp, #8
   74 0000005E E8BD 8BF0       pop              {r4-r9, r11, pc}
   75 00000062         JustZero
   76 00000062 F04F 0030       mov              r0, #0x30
   77 00000066 F7FF FFFE       BL               ST7735_OutChar
   78 0000006A B002            add              sp, #8
   79 0000006C E8BD 8BF0       pop              {r4-r9, r11, pc}
   80 00000070         
   81 00000070         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   82 00000070         
   83 00000070         ; -----------------------LCD _OutFix--------------------
                       --
   84 00000070         ; Output characters to LCD display in fixed-point format
                       
   85 00000070         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   86 00000070         ; Inputs:  R0 is an unsigned 32-bit number
   87 00000070         ; Outputs: none
   88 00000070         ; E.g., R0=0,    then output "0.000"
   89 00000070         ;       R0=3,    then output "0.003"
   90 00000070         ;       R0=89,   then output "0.089"
   91 00000070         ;       R0=123,  then output "0.123"
   92 00000070         ;       R0=9999, then output "9.999"
   93 00000070         ;       R0>9999, then output "*.***"
   94 00000070         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   95 00000070 00000000 
                       num2    equ              0
   96 00000070 00000004 
                       thousands
                               equ              4
   97 00000070 00000008 
                       remainder
                               equ              8
   98 00000070 0000000C 
                       hundreds



ARM Macro Assembler    Page 3 


                               equ              12
   99 00000070 00000010 
                       tens    equ              16
  100 00000070 00000014 
                       ones    equ              20
  101 00000070         LCD_OutFix
  102 00000070 E92D 41F0       push             {r4-r8, lr}
  103 00000074 B086            sub              sp, #24
  104 00000076 46EB            mov              fp, sp
  105 00000078 F8CB 0000       str              r0, [fp, #num2] ; save number o
                                                            n stack
  106 0000007C F242 740F       ldr              r4, =9999
  107 00000080 2800            cmp              r0, #0
  108 00000082 D05F            beq              AllZeros
  109 00000084 42A0            cmp              r0, r4
  110 00000086 D848            bhi              TooBig
  111 00000088         
  112 00000088         ; otherwise 3 or 4 digit number and we need to do some f
                       unny stuff
  113 00000088 F44F 757A       mov              r5, #1000
  114 0000008C FBB0 F4F5       udiv             r4, r0, r5  ; get thousands dig
                                                            it
  115 00000090 F8CB 4004       str              r4, [fp, #thousands] 
                                                            ; save on stack
  116 00000094         
  117 00000094         ; hundreds = (r0 / 100) % 10
  118 00000094 F04F 0564       mov              r5, #100
  119 00000098 FBB0 F4F5       udiv             r4, r0, r5
  120 0000009C F04F 050A       mov              r5, #10
  121 000000A0 FBB4 F6F5       udiv             r6, r4, r5
  122 000000A4 FB06 F705       mul              r7, r6, r5
  123 000000A8 EBA4 0807       sub              r8, r4, r7  ; r8 is hundreds di
                                                            git
  124 000000AC F8CB 800C       str              r8, [fp, #hundreds]
  125 000000B0         
  126 000000B0         ; tens = (r0 / 10) % 10
  127 000000B0 F04F 050A       mov              r5, #10
  128 000000B4 FBB0 F4F5       udiv             r4, r0, r5
  129 000000B8 F04F 050A       mov              r5, #10
  130 000000BC FBB4 F6F5       udiv             r6, r4, r5
  131 000000C0 FB06 F705       mul              r7, r6, r5
  132 000000C4 EBA4 0807       sub              r8, r4, r7  ; r8 is hundreds di
                                                            git
  133 000000C8 F8CB 8010       str              r8, [fp, #tens]
  134 000000CC         
  135 000000CC         ; ones = r0 % 10
  136 000000CC F04F 050A       mov              r5, #10
  137 000000D0 FBB0 F6F5       udiv             r6, r0, r5
  138 000000D4 FB06 F705       mul              r7, r6, r5
  139 000000D8 EBA0 0807       sub              r8, r0, r7  ; r8 is hundreds di
                                                            git
  140 000000DC F8CB 8014       str              r8, [fp, #ones]
  141 000000E0         
  142 000000E0         ; print!
  143 000000E0         ;
  144 000000E0         
  145 000000E0 F8DB 0004       ldr              r0, [fp, #thousands]
  146 000000E4 F100 0030       add              r0, #0x30   ; ascii offset
  147 000000E8 F7FF FFFE       bl               ST7735_OutChar



ARM Macro Assembler    Page 4 


  148 000000EC         
  149 000000EC F04F 002E       mov              r0, #'.'
  150 000000F0 F7FF FFFE       bl               ST7735_OutChar
  151 000000F4         
  152 000000F4 F8DB 000C       ldr              r0, [fp, #hundreds] 
                                                            ; hundreds place
  153 000000F8 F100 0030       add              r0, #0x30   ; ascii offset
  154 000000FC F7FF FFFE       bl               ST7735_OutChar
  155 00000100         
  156 00000100 F8DB 0010       ldr              r0, [fp, #tens] ; tens place
  157 00000104 F100 0030       add              r0, #0x30   ; ascii offset
  158 00000108 F7FF FFFE       bl               ST7735_OutChar
  159 0000010C         
  160 0000010C F8DB 0014       ldr              r0, [fp, #ones]
  161 00000110 F100 0030       add              r0, #0x30   ; ascii offset
  162 00000114 F7FF FFFE       bl               ST7735_OutChar
  163 00000118         
  164 00000118 E029            b                done
  165 0000011A         ;
  166 0000011A         ; prints *.***
  167 0000011A         TooBig
  168 0000011A F04F 002A       mov              r0, #'*'
  169 0000011E F7FF FFFE       bl               ST7735_OutChar
  170 00000122 F04F 002E       mov              r0, #'.'
  171 00000126 F7FF FFFE       bl               ST7735_OutChar
  172 0000012A F04F 002A       mov              r0, #'*'
  173 0000012E F7FF FFFE       bl               ST7735_OutChar
  174 00000132 F04F 002A       mov              r0, #'*'
  175 00000136 F7FF FFFE       bl               ST7735_OutChar
  176 0000013A F04F 002A       mov              r0, #'*'
  177 0000013E F7FF FFFE       bl               ST7735_OutChar
  178 00000142 E014            b                done
  179 00000144         ;
  180 00000144         ; Prints 0.000
  181 00000144         AllZeros
  182 00000144 F04F 0030       mov              r0, #'0'
  183 00000148 F7FF FFFE       bl               ST7735_OutChar
  184 0000014C F04F 002E       mov              r0, #'.'
  185 00000150 F7FF FFFE       bl               ST7735_OutChar
  186 00000154 F04F 0030       mov              r0, #'0'
  187 00000158 F7FF FFFE       bl               ST7735_OutChar
  188 0000015C F04F 0030       mov              r0, #'0'
  189 00000160 F7FF FFFE       bl               ST7735_OutChar
  190 00000164 F04F 0030       mov              r0, #'0'
  191 00000168 F7FF FFFE       bl               ST7735_OutChar
  192 0000016C E7FF            b                done
  193 0000016E         ;
  194 0000016E         ; restores everything
  195 0000016E         done
  196 0000016E B006            add              sp, #24
  197 00000170 E8BD 81F0       pop              {r4-r8, pc}
  198 00000174                 ALIGN
  199 00000174         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  200 00000174                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  201 00000174                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_SpaceInvaders -IC:\Users\victo\AppD



ARM Macro Assembler    Page 5 


ata\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\victo\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__UVIS
ION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA
 1" --predefine="_RTE_ SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
AllZeros 00000144

Symbol: AllZeros
   Definitions
      At line 181 in file Print.s
   Uses
      At line 108 in file Print.s
Comment: AllZeros used once
JustZero 00000062

Symbol: JustZero
   Definitions
      At line 75 in file Print.s
   Uses
      At line 45 in file Print.s
Comment: JustZero used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 39 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000070

Symbol: LCD_OutFix
   Definitions
      At line 101 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
Loop 0000001C

Symbol: Loop
   Definitions
      At line 51 in file Print.s
   Uses
      At line 63 in file Print.s
Comment: Loop used once
Next 00000046

Symbol: Next
   Definitions
      At line 64 in file Print.s
   Uses
      At line 54 in file Print.s
      At line 71 in file Print.s

TooBig 0000011A




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: TooBig
   Definitions
      At line 167 in file Print.s
   Uses
      At line 110 in file Print.s
Comment: TooBig used once
done 0000016E

Symbol: done
   Definitions
      At line 195 in file Print.s
   Uses
      At line 164 in file Print.s
      At line 178 in file Print.s
      At line 192 in file Print.s

donedone 0000005C

Symbol: donedone
   Definitions
      At line 72 in file Print.s
   Uses
      None
Comment: donedone unused
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

count 00000000

Symbol: count
   Definitions
      At line 36 in file Print.s
   Uses
      At line 49 in file Print.s
      At line 60 in file Print.s
      At line 62 in file Print.s
      At line 68 in file Print.s
      At line 70 in file Print.s

hundreds 0000000C

Symbol: hundreds
   Definitions
      At line 98 in file Print.s
   Uses
      At line 124 in file Print.s
      At line 152 in file Print.s

num 00000004

Symbol: num
   Definitions
      At line 37 in file Print.s
   Uses
      At line 47 in file Print.s
      At line 52 in file Print.s
      At line 59 in file Print.s

num2 00000000

Symbol: num2
   Definitions
      At line 95 in file Print.s
   Uses
      At line 105 in file Print.s
Comment: num2 used once
ones 00000014

Symbol: ones
   Definitions
      At line 100 in file Print.s
   Uses
      At line 140 in file Print.s
      At line 160 in file Print.s

remainder 00000008

Symbol: remainder
   Definitions
      At line 97 in file Print.s
   Uses
      None
Comment: remainder unused
tens 00000010

Symbol: tens



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 99 in file Print.s
   Uses
      At line 133 in file Print.s
      At line 156 in file Print.s

thousands 00000004

Symbol: thousands
   Definitions
      At line 96 in file Print.s
   Uses
      At line 115 in file Print.s
      At line 145 in file Print.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 67 in file Print.s
      At line 77 in file Print.s
      At line 147 in file Print.s
      At line 150 in file Print.s
      At line 154 in file Print.s
      At line 158 in file Print.s
      At line 162 in file Print.s
      At line 169 in file Print.s
      At line 171 in file Print.s
      At line 173 in file Print.s
      At line 175 in file Print.s
      At line 177 in file Print.s
      At line 183 in file Print.s
      At line 185 in file Print.s
      At line 187 in file Print.s
      At line 189 in file Print.s
      At line 191 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
353 symbols in table
